<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <defaults public="false" autowire="true" autoconfigure="true" />

        <service id="JMS\ObjectRouting\RouterInterface" alias="JMS\ObjectRouting\Symfony\Symfony22Adapter" />

        <service id="JMS\ObjectRouting\Symfony\Symfony22Adapter" />

        <service id="JMS\ObjectRouting\ObjectRouter" public="true" />

        <service id="JMS\ObjectRouting\Twig\RoutingExtension" />

        <!-- Public to make the LazyLoadingDriver work -->
        <service id="Metadata\Driver\DriverInterface" alias="Metadata\Driver\DriverChain" public="true" />

        <service id="Metadata\Driver\DriverChain">
            <argument type="collection">
                <argument type="service" id="JMS\ObjectRouting\Metadata\Driver\AnnotationDriver" />
            </argument>
        </service>

        <service id="JMS\ObjectRouting\Metadata\Driver\AnnotationDriver" />

        <service id="Metadata\Cache\CacheInterface" alias="Metadata\Cache\FileCache" />

        <service id="Metadata\Cache\FileCache">
            <argument>%bg_object_routing.cache_dir%</argument>
            <argument>%kernel.debug%</argument>
        </service>

        <service id="Metadata\MetadataFactory">
            <argument key="$driver" type="service">
                <service class="Metadata\Driver\LazyLoadingDriver">
                    <argument type="service" id="service_container" />
                    <argument>Metadata\Driver\DriverInterface</argument>
                </service>
            </argument>
            <argument key="$hierarchyMetadataClass">Metadata\ClassHierarchyMetadata</argument>
            <argument key="$debug">%kernel.debug%</argument>
            <call method="setCache">
                <argument type="service" id="Metadata\Cache\CacheInterface" />
            </call>
            <call method="setIncludeInterfaces">
                <argument>true</argument>
            </call>
        </service>
        <service id="Metadata\MetadataFactoryInterface" alias="Metadata\MetadataFactory" />

    </services>
</container>
